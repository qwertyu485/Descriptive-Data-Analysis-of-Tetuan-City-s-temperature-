# -*- coding: utf-8 -*-
"""Tetuan City-Descriptive Data Analysis.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1sRZ9BuNbM7RPWBb02j_FKeyUV_3-_2BN
"""

#import libararies
import pandas as pd #Pandas is used for handling structured data, doing data cleaning and preparation, exploratory data analysis, reads and writes in many formats like CSV, excel, sql
import numpy as np #Mathematical stuff, like arrays, also the foundation for scientific computing
import matplotlib.pyplot as plt#For data visualization
import seaborn as sns#Make the plot easier for others to read



#Up load and read data set using the google colab
from google.colab import files #import files utility from Google colab, allow you to interact with files
import io#sth that let you works with streams of data
uploaded = files.upload()#Sth like a file picker that you can select what you want to upload
filename = next(iter(uploaded))#Takes the first file that you upload
df = pd.read_csv(io.BytesIO(uploaded[filename]))# file is in bytes so this wrap the bytes into file like object makes the pandas to read the CSV file

#Preview the head of the data
df.head()

#Check for missing values
print(df.isnull().sum())

#Data Structure
print("\n Shape of the data set")#gives you number of columns and rows
print(df.shape)
#Get column names and make it into a list
print("\n Column names")
print(df.columns.tolist())

print("\n Data Types and Non-null counts")
print(df.info())

#Check the missing value of the data set
print("\n Missing values in each column:")
print(df.isnull().sum())

#Give a statistical summary
print("\n Statistical summary:")
print(df.describe())

#Find the mean and median of all numerical columns
print("\n Mean of all numerical columns:")
print(df.mean(numeric_only=True))

print("\n Median of all numerical columns:")
print(df.median(numeric_only=True))

#Sum of the power consumption in each zone
print("zone 1",df['Zone 1 Power Consumption'].sum())
print("zone 2",df['Zone 2  Power Consumption'].sum())
print("zone 3",df['Zone 3  Power Consumption'].sum())
#Unique value and counts
df.nunique()
df['Zone 1 Power Consumption'].value_counts()

#Filtering data
print("\n rows where Zone 1 Power Consumption >400:")
high_usage=df[df['Zone 1 Power Consumption']>400]
print(high_usage.head())

print("\n rows where Zone 1 Power Consumption >400 AND Temperature >30:")
filtered= df[(df['Zone 1 Power Consumption']>400) & (df['Temperature']>30)]
print(filtered.head())

#Sorting and Grouping
print("\n Top 5 rows Sorted by Temperature (Descending):")
print(df.sort_values(by='Temperature', ascending=False).head())

#Grouping by Rounded Temperature
df['Temp_Round']=df['Temperature'].round(0)#round the temperature
grouped=df.groupby('Temp_Round')['Zone 1 Power Consumption'].mean()

print("\n Average Zone 1 Consumption by Rounded Temperature:")
print(grouped.head())

#Basic Visualization: Histogram of Temperature
plt.figure(figsize=(10,4))
sns.histplot(df['Temperature'], bins=30, kde=True)#Kde: smooth cruve
plt.title('Distribution of Temperature')
plt.xlabel('Temperature')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

#

#Line plot of Power Consumption Over time
df['DateTime']=pd.to_datetime(df['DateTime'])
plt.figure(figsize=(12,4))
sns.lineplot(x='DateTime', y='Zone 1 Power Consumption', data=df, label='Zone 1')
"""Interpretation of the graph: Most observed temperatures are mild to warm (15–25°C).

There are relatively few extreme temperatures (near 5°C or near 35–40°C).

The data suggests that this environment (maybe weather measurements) is temperate, rarely too cold or too hot."""